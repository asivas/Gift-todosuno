"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./context/apiContext.js":
/*!*******************************!*\
  !*** ./context/apiContext.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiProvider: function() { return /* binding */ ApiProvider; },\n/* harmony export */   useApiContext: function() { return /* binding */ useApiContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* __next_internal_client_entry_do_not_use__ useApiContext,ApiProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ApiContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst useApiContext = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ApiContext);\n};\n_s(useApiContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ApiProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [dataUser, setDataUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [dataUsers, setDataUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [dataCuadro, setDataCuadro] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [inactiveUsers, setInactiveUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [reset, setReset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [token, setToken] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(js_cookie__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"token\"));\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Nuevo estado de carga\n    const [legend, setLegend] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [hijoDer, setHijoDer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [hijoIzq, setHijoIzq] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [fatherComplete, setFatherComplete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [ascender, setAscender] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const remindFatherFn = async ()=>{\n        try {\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/remindFatherFn\"), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const json = await res.json();\n            if (json.complete == true) {\n                setFatherComplete(json.complete);\n            }\n        } catch (error) {\n            console.error(\"Error con el fatherFn:\", error);\n        }\n    };\n    const deleteCuadro = async ()=>{\n        try {\n            if (!dataCuadro._id) {\n                console.error(\"El cuadro no existe\", dataCuadro);\n                return;\n            }\n            // Llamar a tu función activar usuario\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/delete\"), {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    dataCuadro\n                })\n            });\n            const json = await res.json();\n            console.log(\"cuadro borrado:\", dataCuadro._id);\n        } catch (error) {\n            console.error(\"Error al agregar el campo:\", error);\n        }\n    };\n    const deleteUser = async (username)=>{\n        try {\n            if (!username) {\n                console.error(\"El nombre de usuario no puede estar vac\\xedo\");\n                return;\n            }\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/deleteUser\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username\n                })\n            });\n            if (res.status === 205) {\n                // La solicitud fue exitosa, puedes realizar alguna acción aquí si es necesario\n                console.log(\"Usuario borrado exitosamente:\", username);\n            } else {\n                // La solicitud no fue exitosa, puedes manejar el error aquí\n                console.error(\"Error al borrar usuario:\", username, res.statusText);\n            }\n        } catch (error) {\n            console.error(\"Error al realizar la solicitud:\", error);\n        }\n    };\n    const activarUsuario = async (username)=>{\n        try {\n            if (!username) {\n                console.error(\"El nombre de usuario no puede estar vac\\xedo\");\n                return;\n            }\n            // Llamar a tu función activar usuario\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/activarUsuario\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username\n                })\n            });\n            const json = await res.json();\n            console.log(\"username del api\", username);\n        } catch (error) {\n            console.error(\"Error al agregar el campo:\", error);\n        }\n    };\n    const desactivarUsuario = async (username)=>{\n        try {\n            if (!username) {\n                console.error(\"El nombre de usuario no puede estar vac\\xedo\");\n                return;\n            }\n            // Llamar a tu función activar usuario\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/desactivarUsuario\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    username\n                })\n            });\n            const json = await res.json();\n            console.log(\"username del api\", username);\n        } catch (error) {\n            console.error(\"Error al agregar el campo:\", error);\n        }\n    };\n    const cambiarEstadoComplete = async ()=>{\n        const user = dataUser.username;\n        const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/cambiarEstadoComplete\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user\n            })\n        });\n        console.log(\"apretando\");\n    };\n    const cambiarEstadoCompletePadre = async ()=>{\n        const user = dataUser;\n        const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/cambiarEstadoCompletePadre\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                user\n            })\n        });\n    };\n    const traerCuadroPadre = async ()=>{\n        const padre = dataUser.referral_father;\n        const hijo = dataUser.username;\n        const nieto = dataUser.referidos[1];\n        const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/traerCuadroPadre\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                padre,\n                hijo,\n                nieto\n            })\n        });\n        console.log(\"funcion padre activada\");\n    };\n    const traerCuadroPadreSub = async ()=>{\n        const padre = dataUser.referral_father;\n        const hijo = dataUser.username;\n        const nieto1 = dataCuadro.lado_derecho.guide;\n        const nieto2 = dataCuadro.lado_izquierdo.guide;\n        const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/traerCuadroPadreSub\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                padre,\n                hijo,\n                nieto1,\n                nieto2\n            })\n        });\n        console.log(\"funcion padre sub activada\");\n    };\n    const cuadroIdHijo = async ()=>{\n        const hijoDer1 = dataCuadro.lado_derecho.guide;\n        const hijoIzq1 = dataCuadro.lado_izquierdo.guide;\n        if (hijoDer1) {\n            const res1 = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/cuadroHijo/\").concat(hijoDer1), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const json1 = await res1.json();\n            if (json1 === null) {\n                console.log(\"tenemos el mismo cuadro id\");\n            //console.log(hijoDer)\n            } else {\n                // console.log(\"no tenemos el mismo cuadro id\")\n                setHijoDer(true);\n            }\n        }\n        if (hijoIzq1) {\n            const res2 = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/cuadroHijo/\").concat(hijoIzq1), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const json2 = await res2.json();\n            if (json2 === null) {\n                console.log(\"tenemos el mismo cuadro id\");\n            // console.log(hijoIzq)\n            } else {\n                setHijoIzq(true);\n            }\n        }\n    };\n    const createCuadros = async (prop1, prop2, userHijo)=>{\n        try {\n            if (!dataCuadro) {\n                console.error(\"no hay cuadro con data\");\n                return;\n            }\n            // Llamar a tu función activar usuario\n            const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/createCuadros\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    dataCuadro,\n                    prop1,\n                    prop2,\n                    userHijo\n                })\n            });\n            //  console.log(\"data del cuadro API\", json); \n            console.log(\"la prop llega bien\", prop1, prop2, userHijo);\n        // const json = await res.json();\n        } catch (error) {\n            console.error(\"Error al enviar dataCuadro:\", error);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchData = async ()=>{\n            try {\n                setLoading(true);\n                const res = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/data\"), {\n                    headers: {\n                        Authorization: \"Bearer \".concat(token)\n                    }\n                });\n                const json = await res.json();\n                setDataUser(json);\n                // Verificar si cuadro_id no es null antes de hacer la segunda solicitud\n                if (json.cuadro_id !== null) {\n                    const res2 = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/\").concat(json.cuadro_id));\n                    const json2 = await res2.json();\n                    setDataCuadro(json2);\n                    const res3 = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/cuadroPadre/\").concat(json.direction, \"/\").concat(json.referral_father));\n                    const json3 = await res3.json();\n                    if (json3.estado === true && json.nivel !== 10 && json2.lado_derecho && json2.lado_derecho.guide && json2.lado_izquierdo && json2.lado_izquierdo.guide && json2.legend === json.username) {\n                        console.log(\"No soy nivel 10 y ambos gu\\xedas est\\xe1n presentes\");\n                        json.complete = true;\n                    } else {\n                        console.log(\"No estoy completo o alguno de los gu\\xedas est\\xe1 ausente o soy nivel 10\");\n                    }\n                    if (json.username === json2.legend) {\n                        setLegend(true);\n                    }\n                    if (json2.lado_derecho && json2.lado_derecho.builders1 && json2.lado_derecho.builders2 && json2.lado_izquierdo && json2.lado_izquierdo.builders1 && json2.lado_izquierdo.builders2) {\n                        const res4 = await fetch(\"\".concat(\"http://localhost:4000/\", \"cuadro/everyOneActive/\").concat(json2._id));\n                        const json4 = await res4.json();\n                        if (json4.estado === true) {\n                            setAscender(true);\n                        }\n                    }\n                    setLoading(true);\n                    const res5 = await fetch(\"\".concat(\"http://localhost:4000/\", \"user/users\"), {\n                        headers: {\n                            Authorization: \"Bearer \".concat(token)\n                        }\n                    });\n                    const json5 = await res5.json();\n                    setDataUsers(json5);\n                    const inactiveUsersList = json5.filter((user)=>user.active !== true);\n                    console.log(inactiveUsersList);\n                    console.log(json2);\n                    const filter2 = inactiveUsersList.filter((user)=>{\n                        var _json2_lado_derecho_builders1, _json2_lado_derecho_builders2, _json2_lado_izquierdo_builders1, _json2_lado_izquierdo_builders2;\n                        const username = user.username;\n                        return username && json2.lado_derecho && json2.lado_izquierdo && (username === ((_json2_lado_derecho_builders1 = json2.lado_derecho.builders1) === null || _json2_lado_derecho_builders1 === void 0 ? void 0 : _json2_lado_derecho_builders1.username) || username === ((_json2_lado_derecho_builders2 = json2.lado_derecho.builders2) === null || _json2_lado_derecho_builders2 === void 0 ? void 0 : _json2_lado_derecho_builders2.username) || username === ((_json2_lado_izquierdo_builders1 = json2.lado_izquierdo.builders1) === null || _json2_lado_izquierdo_builders1 === void 0 ? void 0 : _json2_lado_izquierdo_builders1.username) || username === ((_json2_lado_izquierdo_builders2 = json2.lado_izquierdo.builders2) === null || _json2_lado_izquierdo_builders2 === void 0 ? void 0 : _json2_lado_izquierdo_builders2.username));\n                    });\n                    console.log(\"filter\", filter2);\n                    setInactiveUsers(filter2);\n                }\n                ;\n            } catch (error) {\n                console.error(\"Error fetching private data:\", error);\n            } finally{\n                setLoading(false); // Indicar que los datos se han cargado\n            }\n        };\n        fetchData();\n    }, [\n        token,\n        reset\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ApiContext.Provider, {\n        value: {\n            dataUser,\n            dataCuadro,\n            setToken,\n            setReset,\n            loading,\n            inactiveUsers,\n            activarUsuario,\n            desactivarUsuario,\n            legend,\n            setLegend,\n            deleteCuadro,\n            deleteUser,\n            traerCuadroPadre,\n            traerCuadroPadreSub,\n            cuadroIdHijo,\n            hijoDer,\n            hijoIzq,\n            cambiarEstadoComplete,\n            cambiarEstadoCompletePadre,\n            createCuadros,\n            fatherComplete,\n            setFatherComplete,\n            remindFatherFn,\n            ascender,\n            setAscender\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/sofia/Documentos/Gift/frontend/context/apiContext.js\",\n        lineNumber: 434,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(ApiProvider, \"VIi+NRcZP54VdJ2yUqPFnDcpn4I=\");\n_c = ApiProvider;\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./context/apiContext.js\n"));

/***/ })

});